[branch]
    autosetuprebase = always
    rebase = true

[color]
    ui = auto

[core]
    autocrlf = input
    whitespace = fix,space-before-tab,-indent-with-non-tab,trailing-space
    editor = nvim
    pager = delta --diff-so-fancy

[delta]
    line-numbers = true
    side-by-side = true

[help]
    autocorrect = prompt

[credential]
    helper = store

[diff]
    compactionHeuristic = true
    mnemonicPrefix = true
    renames = copies
    colorMoved = default

[diff "ansible-vault"]
    textconv = ansible-vault view
    # Do not cache the vault contents
    cachetextconv = false

[fetch]
    prune = true

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[format]
    pretty = %Cred%h%Creset -%C(yellow)%d%Creset %C(white)%s%Creset %C(yellow)(%cr) %C(bold blue)<%an>%Creset

[gpg]
    format = ssh

[interactive]
    diffFiltr = delta --color-only

[log]
    abbrevCommit = true
    decorate = auto

[merge]
    # I pretty much never mean to do a real merge, since I use a rebase workflow.
    # Note: this global option applies to all merges, including those done during a git pull
    ff = only

    # Standard diff is two sets of final changes. This introduces the original text before each side's changes.
    conflictstyle = diff3

[merge "ansible-vault"]
    name = ansible-vault merge driver
    driver = /usr/local/bin/ansible-vault-merge -- %O %A %B %P

[push]
    # "push the current branch back to the branch whose changes are usually integrated into the current branch"
    # "refuse to push if the upstream branch name is different from the local one"
    default = simple

[rebase]
    autostash = true

[rerere]
    enabled = true

[status]
    submoduleSummary = true
    showUntrackedFiles = all

[tag]
    sort = version:refname
